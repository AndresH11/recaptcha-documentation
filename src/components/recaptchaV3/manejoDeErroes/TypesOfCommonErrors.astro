---
import CustomContainer from "@/components/common/CustomContainer.astro";
import SubTitle from "@/components/common/SubTitle.astro";
import { Icon } from "astro-icon/components";
import { Code } from "astro:components";
import { useTranslations } from "@/i18n/utils";

interface Props {
  lang?: "es" | "en" | "fr" | "it" | "pt" | "pt-BR" | "ja" | "ko";
}

const { lang = "es" } = Astro.props;
const t = useTranslations(lang);

const codeExample = `<ReCaptchaV3
  siteKey="your-site-key"
  action="test"
  onError={(error) => {
    if (error.message.includes("Failed to load")) {
      // ${t("errors.code.script.blocked")}
      console.error("${t("errors.code.script.load")}");
      // ${t("errors.code.script.user")}
    }
  }}
/>`;

const codeExample2 = `const { isReady, isLoading, execute } = useReCaptcha({
  siteKey: 'your-site-key',
  action: 'test',
  timeout: 10000,
  onError: (error) => {
    if (error.message.includes('timeout')) {
      // ${t("errors.code.timeout.retry")}
      console.error('${t("errors.code.timeout.load")}');
    }
  },
});
`;
const codeExample3 = `<ReCaptchaV3
  siteKey="invalid-key"
  action="test"
  onError={(error) => {
    if (error.message.includes('Invalid site key')) {
      console.error('${t("errors.code.invalid.notify")}');
      // ${t("errors.code.invalid.notify")}
    }
  }}
/>;
`;

const codesExamples = [codeExample, codeExample2, codeExample3];
---

<section class="space-y-6 max-w-5xl">
  <SubTitle title={t("errors.types.title")} />
  <h3 class="text-white50 font-bold text-xs md:text-sm xl:text-lg 2xl:text-xl">
    {t("errors.types.script.load")}
  </h3>
  <CustomContainer class="px-6 py-3 max-w-5xl">
    <div class="flex items-center gap-4 justify-between mb-6">
      <div class="flex items-center gap-2">
        <div class="h-5 w-5 rounded-full bg-[#FF4444]"></div>
        <div class="h-5 w-5 rounded-full bg-[#F4FF5C]"></div>
        <div class="h-5 w-5 rounded-full bg-[#45FF42]"></div>
      </div>
      <button
        type="button"
        id="copyCodeBtn"
        class="text-white50 hover:text-white70 cursor-pointer transition-colors"
        title={t("ui.copy.code")}
      >
        <Icon name="mdi:content-copy" size={24} />
      </button>
    </div>
    <Code
      code={codeExample}
      lang="tsx"
      theme="dracula"
      class="code-transparent"
    />
  </CustomContainer>
  <h3 class="text-white50 font-bold text-xs md:text-sm xl:text-lg 2xl:text-xl">
    {t("errors.types.timeout")}
  </h3>
  <CustomContainer class="px-6 py-3 max-w-5xl">
    <div class="flex items-center gap-4 justify-between mb-6">
      <div class="flex items-center gap-2">
        <div class="h-5 w-5 rounded-full bg-[#FF4444]"></div>
        <div class="h-5 w-5 rounded-full bg-[#F4FF5C]"></div>
        <div class="h-5 w-5 rounded-full bg-[#45FF42]"></div>
      </div>
      <button
        type="button"
        id="copyCodeBtn2"
        class="text-white50 hover:text-white70 cursor-pointer transition-colors"
        title={t("ui.copy.code")}
      >
        <Icon name="mdi:content-copy" size={24} />
      </button>
    </div>
    <Code
      code={codeExample2}
      lang="tsx"
      theme="dracula"
      class="code-transparent"
    />
  </CustomContainer>
  <h3 class="text-white50 font-bold text-xs md:text-sm xl:text-lg 2xl:text-xl">
    {t("errors.types.invalid.key")}
  </h3>
  <CustomContainer class="px-6 py-3 max-w-5xl">
    <div class="flex items-center gap-4 justify-between mb-6">
      <div class="flex items-center gap-2">
        <div class="h-5 w-5 rounded-full bg-[#FF4444]"></div>
        <div class="h-5 w-5 rounded-full bg-[#F4FF5C]"></div>
        <div class="h-5 w-5 rounded-full bg-[#45FF42]"></div>
      </div>
      <button
        type="button"
        id="copyCodeBtn3"
        class="text-white50 hover:text-white70 cursor-pointer transition-colors"
        title={t("ui.copy.code")}
      >
        <Icon name="mdi:content-copy" size={24} />
      </button>
    </div>
    <Code
      code={codeExample3}
      lang="tsx"
      theme="dracula"
      class="code-transparent"
    />
  </CustomContainer>
</section>

<script is:inline define:vars={{ codesExamples }}>
  const copyBtn = document.getElementById("copyCodeBtn");
  const copyBtn2 = document.getElementById("copyCodeBtn2");
  const copyBtn3 = document.getElementById("copyCodeBtn3");

  const btns = [copyBtn, copyBtn2, copyBtn3];

  for (let index = 0; index < btns.length; index++) {
    btns[index]?.addEventListener("click", async () => {
      try {
        await navigator.clipboard.writeText(codesExamples[index]);

        // Feedback visual - Cambiar a icono de check
        const originalInnerHTML = btns[index].innerHTML;
        btns[index].innerHTML =
          '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="currentColor" d="M21 7L9 19l-5.5-5.5l1.41-1.41L9 16.17L19.59 5.59z"/></svg>';
        btns[index].classList.add("text-green-400");

        setTimeout(() => {
          btns[index].innerHTML = originalInnerHTML;
          btns[index].classList.remove("text-green-400");
        }, 2000);
      } catch (err) {
        console.error("Error al copiar:", err);

        // Feedback de error
        btns[index].classList.add("text-red-400");
        setTimeout(() => {
          btns[index].classList.remove("text-red-400");
        }, 2000);
      }
    });
  }
</script>
