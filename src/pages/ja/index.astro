---
import TitlePage from "@/components/common/TitlePage.astro";
import CustomContainer from "@/components/common/CustomContainer.astro";
import Button from "@/components/common/Button.astro";
import { Icon } from "astro-icon/components";
import Layout from "@/layouts/Layout.astro";
import { useTranslations } from "@/i18n/utils";

const t = useTranslations("ja");
---

<Layout titleKey="page.introduction.title" descriptionKey="seo.description">
  <main class="py-14 px-6 md:px-12 space-y-11">
    <TitlePage title={t("nav.introduction")} />
    <CustomContainer
      class="text-base xl:text-lg 2xl:text-xl text-white50 px-6 py-8"
    >
      <p>
        {t("intro.description")}
        <a
          href="https://www.linkedin.com/in/andresh11/"
          rel="noopener noreferrer"
          target="_blank"
          class="font-bold hover:underline">{t("intro.author.link")}</a
        >.
      </p>
    </CustomContainer>
    <section
      class="space-y-11 md:grid md:grid-cols-2 md:justify-between text-base xl:text-lg 2xl:text-xl text-white70 md:gap-4 h-fit"
    >
      <div class="space-y-4">
        <h2 class="font-bold">{t("learn.recaptcha-v2.title")}</h2>
        <CustomContainer class="px-6 py-8 xl:max-h-60 xl:h-full text-white50">
          <ul class="list-disc list-inside space-y-2 text-sm 2xl:text-base">
            <li>
              フォームに「私はロボットではありません」チェックボックスコンポーネントを統合する方法。
            </li>
            <li>画像による視覚的チャレンジの実装。</li>
            <li>基本設定とトークンの検証。</li>
            <li>お問い合わせフォームを保護する実例。</li>
            <li>google-react-recaptcha-v2 パッケージの使用。</li>
          </ul>
        </CustomContainer>
      </div>

      <div class="space-y-4">
        <h2 class="font-bold">{t("learn.recaptcha-v3.title")}</h2>
        <CustomContainer class="px-6 py-8 xl:max-h-60 xl:h-full text-white50">
          <ul class="list-disc list-inside space-y-2 text-sm 2xl:text-base">
            <li>ライブラリの初期インストールと設定。</li>
            <li>useRecaptcha フックとその設定オプションの使用。</li>
            <li>TypeScript とそのすべてのインターフェースでの実装。</li>
            <li>高度な設定：Trusted Types、CSP、および多言語。</li>
            <li>
              完全な API：サービス、ユーティリティ、および事前定義された定数。
            </li>
            <li>一般的なエラーの処理と回復戦略。</li>
            <li>実例：お問い合わせフォーム、チェックアウト、分析。</li>
          </ul>
        </CustomContainer>
      </div>
    </section>
    <section class="flex items-center justify-end">
      <Button>
        {t("intro.next.button")}
        <Icon name="mdi:arrow-right-thick" size={20} />
      </Button>
    </section>
  </main>
</Layout>

